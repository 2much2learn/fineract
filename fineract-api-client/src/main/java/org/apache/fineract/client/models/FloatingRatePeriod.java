/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import org.apache.fineract.client.models.AppUser;
import org.apache.fineract.client.models.FloatingRate;
/**
 * FloatingRatePeriod
 */


public class FloatingRatePeriod {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("fromDate")
  private OffsetDateTime fromDate = null;

  @SerializedName("interestRate")
  private BigDecimal interestRate = null;

  @SerializedName("createdBy")
  private AppUser createdBy = null;

  @SerializedName("modifiedBy")
  private AppUser modifiedBy = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("modifiedOn")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("differentialToBaseLendingRate")
  private Boolean differentialToBaseLendingRate = null;

  @SerializedName("floatingRatesId")
  private FloatingRate floatingRatesId = null;

  @SerializedName("new")
  private Boolean _new = null;

  public FloatingRatePeriod id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public FloatingRatePeriod fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @Schema(description = "")
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }

  public FloatingRatePeriod interestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Get interestRate
   * @return interestRate
  **/
  @Schema(description = "")
  public BigDecimal getInterestRate() {
    return interestRate;
  }

  public void setInterestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
  }

  public FloatingRatePeriod createdBy(AppUser createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public AppUser getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(AppUser createdBy) {
    this.createdBy = createdBy;
  }

  public FloatingRatePeriod modifiedBy(AppUser modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @Schema(description = "")
  public AppUser getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(AppUser modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public FloatingRatePeriod createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public FloatingRatePeriod modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public FloatingRatePeriod active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public FloatingRatePeriod differentialToBaseLendingRate(Boolean differentialToBaseLendingRate) {
    this.differentialToBaseLendingRate = differentialToBaseLendingRate;
    return this;
  }

   /**
   * Get differentialToBaseLendingRate
   * @return differentialToBaseLendingRate
  **/
  @Schema(description = "")
  public Boolean isDifferentialToBaseLendingRate() {
    return differentialToBaseLendingRate;
  }

  public void setDifferentialToBaseLendingRate(Boolean differentialToBaseLendingRate) {
    this.differentialToBaseLendingRate = differentialToBaseLendingRate;
  }

  public FloatingRatePeriod floatingRatesId(FloatingRate floatingRatesId) {
    this.floatingRatesId = floatingRatesId;
    return this;
  }

   /**
   * Get floatingRatesId
   * @return floatingRatesId
  **/
  @Schema(description = "")
  public FloatingRate getFloatingRatesId() {
    return floatingRatesId;
  }

  public void setFloatingRatesId(FloatingRate floatingRatesId) {
    this.floatingRatesId = floatingRatesId;
  }

  public FloatingRatePeriod _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @Schema(description = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FloatingRatePeriod floatingRatePeriod = (FloatingRatePeriod) o;
    return Objects.equals(this.id, floatingRatePeriod.id) &&
        Objects.equals(this.fromDate, floatingRatePeriod.fromDate) &&
        Objects.equals(this.interestRate, floatingRatePeriod.interestRate) &&
        Objects.equals(this.createdBy, floatingRatePeriod.createdBy) &&
        Objects.equals(this.modifiedBy, floatingRatePeriod.modifiedBy) &&
        Objects.equals(this.createdOn, floatingRatePeriod.createdOn) &&
        Objects.equals(this.modifiedOn, floatingRatePeriod.modifiedOn) &&
        Objects.equals(this.active, floatingRatePeriod.active) &&
        Objects.equals(this.differentialToBaseLendingRate, floatingRatePeriod.differentialToBaseLendingRate) &&
        Objects.equals(this.floatingRatesId, floatingRatePeriod.floatingRatesId) &&
        Objects.equals(this._new, floatingRatePeriod._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fromDate, interestRate, createdBy, modifiedBy, createdOn, modifiedOn, active, differentialToBaseLendingRate, floatingRatesId, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FloatingRatePeriod {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    differentialToBaseLendingRate: ").append(toIndentedString(differentialToBaseLendingRate)).append("\n");
    sb.append("    floatingRatesId: ").append(toIndentedString(floatingRatesId)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
