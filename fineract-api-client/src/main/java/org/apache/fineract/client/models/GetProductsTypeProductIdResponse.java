/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.GetChargesCurrency;
import org.apache.fineract.client.models.GetLockPeriodTypeEnum;
import org.apache.fineract.client.models.GetProductsAccountingMappingOptions;
import org.apache.fineract.client.models.GetProductsAccountingMappings;
import org.apache.fineract.client.models.GetProductsAccountingRule;
import org.apache.fineract.client.models.GetProductsCharges;
import org.apache.fineract.client.models.GetProductsCurrency;
import org.apache.fineract.client.models.GetProductsMarketPrice;
import org.apache.fineract.client.models.GetProductsMinimumActivePeriodFrequencyTypeOptions;
/**
 * GetProductsTypeProductIdResponse
 */
@Schema(description = "GetProductsTypeProductIdResponse")

public class GetProductsTypeProductIdResponse {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("shortName")
  private String shortName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("currency")
  private GetProductsCurrency currency = null;

  @SerializedName("totalShares")
  private Integer totalShares = null;

  @SerializedName("totalSharesIssued")
  private Integer totalSharesIssued = null;

  @SerializedName("unitPrice")
  private Integer unitPrice = null;

  @SerializedName("shareCapital")
  private Integer shareCapital = null;

  @SerializedName("minimumShares")
  private Integer minimumShares = null;

  @SerializedName("nominalShares")
  private Integer nominalShares = null;

  @SerializedName("maximumShares")
  private Integer maximumShares = null;

  @SerializedName("marketPrice")
  private List<GetProductsMarketPrice> marketPrice = null;

  @SerializedName("charges")
  private List<GetProductsCharges> charges = null;

  @SerializedName("allowDividendCalculationForInactiveClients")
  private Boolean allowDividendCalculationForInactiveClients = null;

  @SerializedName("lockinPeriod")
  private Integer lockinPeriod = null;

  @SerializedName("lockPeriodTypeEnum")
  private GetLockPeriodTypeEnum lockPeriodTypeEnum = null;

  @SerializedName("minimumActivePeriod")
  private Integer minimumActivePeriod = null;

  @SerializedName("minimumActivePeriodForDividendsTypeEnum")
  private GetLockPeriodTypeEnum minimumActivePeriodForDividendsTypeEnum = null;

  @SerializedName("accountingRule")
  private GetProductsAccountingRule accountingRule = null;

  @SerializedName("accountingMappings")
  private GetProductsAccountingMappings accountingMappings = null;

  @SerializedName("currencyOptions")
  private List<GetChargesCurrency> currencyOptions = null;

  @SerializedName("chargeOptions")
  private List<GetProductsCharges> chargeOptions = null;

  @SerializedName("minimumActivePeriodFrequencyTypeOptions")
  private List<GetProductsMinimumActivePeriodFrequencyTypeOptions> minimumActivePeriodFrequencyTypeOptions = null;

  @SerializedName("lockinPeriodFrequencyTypeOptions")
  private List<GetProductsMinimumActivePeriodFrequencyTypeOptions> lockinPeriodFrequencyTypeOptions = null;

  @SerializedName("accountingMappingOptions")
  private GetProductsAccountingMappingOptions accountingMappingOptions = null;

  public GetProductsTypeProductIdResponse id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1", description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GetProductsTypeProductIdResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Share Product", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetProductsTypeProductIdResponse shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @Schema(example = "SP", description = "")
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }

  public GetProductsTypeProductIdResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "SP", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GetProductsTypeProductIdResponse currency(GetProductsCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public GetProductsCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(GetProductsCurrency currency) {
    this.currency = currency;
  }

  public GetProductsTypeProductIdResponse totalShares(Integer totalShares) {
    this.totalShares = totalShares;
    return this;
  }

   /**
   * Get totalShares
   * @return totalShares
  **/
  @Schema(example = "100", description = "")
  public Integer getTotalShares() {
    return totalShares;
  }

  public void setTotalShares(Integer totalShares) {
    this.totalShares = totalShares;
  }

  public GetProductsTypeProductIdResponse totalSharesIssued(Integer totalSharesIssued) {
    this.totalSharesIssued = totalSharesIssued;
    return this;
  }

   /**
   * Get totalSharesIssued
   * @return totalSharesIssued
  **/
  @Schema(example = "50", description = "")
  public Integer getTotalSharesIssued() {
    return totalSharesIssued;
  }

  public void setTotalSharesIssued(Integer totalSharesIssued) {
    this.totalSharesIssued = totalSharesIssued;
  }

  public GetProductsTypeProductIdResponse unitPrice(Integer unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @Schema(example = "1", description = "")
  public Integer getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Integer unitPrice) {
    this.unitPrice = unitPrice;
  }

  public GetProductsTypeProductIdResponse shareCapital(Integer shareCapital) {
    this.shareCapital = shareCapital;
    return this;
  }

   /**
   * Get shareCapital
   * @return shareCapital
  **/
  @Schema(example = "50", description = "")
  public Integer getShareCapital() {
    return shareCapital;
  }

  public void setShareCapital(Integer shareCapital) {
    this.shareCapital = shareCapital;
  }

  public GetProductsTypeProductIdResponse minimumShares(Integer minimumShares) {
    this.minimumShares = minimumShares;
    return this;
  }

   /**
   * Get minimumShares
   * @return minimumShares
  **/
  @Schema(example = "1", description = "")
  public Integer getMinimumShares() {
    return minimumShares;
  }

  public void setMinimumShares(Integer minimumShares) {
    this.minimumShares = minimumShares;
  }

  public GetProductsTypeProductIdResponse nominalShares(Integer nominalShares) {
    this.nominalShares = nominalShares;
    return this;
  }

   /**
   * Get nominalShares
   * @return nominalShares
  **/
  @Schema(example = "10", description = "")
  public Integer getNominalShares() {
    return nominalShares;
  }

  public void setNominalShares(Integer nominalShares) {
    this.nominalShares = nominalShares;
  }

  public GetProductsTypeProductIdResponse maximumShares(Integer maximumShares) {
    this.maximumShares = maximumShares;
    return this;
  }

   /**
   * Get maximumShares
   * @return maximumShares
  **/
  @Schema(example = "50", description = "")
  public Integer getMaximumShares() {
    return maximumShares;
  }

  public void setMaximumShares(Integer maximumShares) {
    this.maximumShares = maximumShares;
  }

  public GetProductsTypeProductIdResponse marketPrice(List<GetProductsMarketPrice> marketPrice) {
    this.marketPrice = marketPrice;
    return this;
  }

  public GetProductsTypeProductIdResponse addMarketPriceItem(GetProductsMarketPrice marketPriceItem) {
    if (this.marketPrice == null) {
      this.marketPrice = new ArrayList<>();
    }
    this.marketPrice.add(marketPriceItem);
    return this;
  }

   /**
   * Get marketPrice
   * @return marketPrice
  **/
  @Schema(description = "")
  public List<GetProductsMarketPrice> getMarketPrice() {
    return marketPrice;
  }

  public void setMarketPrice(List<GetProductsMarketPrice> marketPrice) {
    this.marketPrice = marketPrice;
  }

  public GetProductsTypeProductIdResponse charges(List<GetProductsCharges> charges) {
    this.charges = charges;
    return this;
  }

  public GetProductsTypeProductIdResponse addChargesItem(GetProductsCharges chargesItem) {
    if (this.charges == null) {
      this.charges = new ArrayList<>();
    }
    this.charges.add(chargesItem);
    return this;
  }

   /**
   * Get charges
   * @return charges
  **/
  @Schema(description = "")
  public List<GetProductsCharges> getCharges() {
    return charges;
  }

  public void setCharges(List<GetProductsCharges> charges) {
    this.charges = charges;
  }

  public GetProductsTypeProductIdResponse allowDividendCalculationForInactiveClients(Boolean allowDividendCalculationForInactiveClients) {
    this.allowDividendCalculationForInactiveClients = allowDividendCalculationForInactiveClients;
    return this;
  }

   /**
   * Get allowDividendCalculationForInactiveClients
   * @return allowDividendCalculationForInactiveClients
  **/
  @Schema(example = "true", description = "")
  public Boolean isAllowDividendCalculationForInactiveClients() {
    return allowDividendCalculationForInactiveClients;
  }

  public void setAllowDividendCalculationForInactiveClients(Boolean allowDividendCalculationForInactiveClients) {
    this.allowDividendCalculationForInactiveClients = allowDividendCalculationForInactiveClients;
  }

  public GetProductsTypeProductIdResponse lockinPeriod(Integer lockinPeriod) {
    this.lockinPeriod = lockinPeriod;
    return this;
  }

   /**
   * Get lockinPeriod
   * @return lockinPeriod
  **/
  @Schema(example = "1", description = "")
  public Integer getLockinPeriod() {
    return lockinPeriod;
  }

  public void setLockinPeriod(Integer lockinPeriod) {
    this.lockinPeriod = lockinPeriod;
  }

  public GetProductsTypeProductIdResponse lockPeriodTypeEnum(GetLockPeriodTypeEnum lockPeriodTypeEnum) {
    this.lockPeriodTypeEnum = lockPeriodTypeEnum;
    return this;
  }

   /**
   * Get lockPeriodTypeEnum
   * @return lockPeriodTypeEnum
  **/
  @Schema(description = "")
  public GetLockPeriodTypeEnum getLockPeriodTypeEnum() {
    return lockPeriodTypeEnum;
  }

  public void setLockPeriodTypeEnum(GetLockPeriodTypeEnum lockPeriodTypeEnum) {
    this.lockPeriodTypeEnum = lockPeriodTypeEnum;
  }

  public GetProductsTypeProductIdResponse minimumActivePeriod(Integer minimumActivePeriod) {
    this.minimumActivePeriod = minimumActivePeriod;
    return this;
  }

   /**
   * Get minimumActivePeriod
   * @return minimumActivePeriod
  **/
  @Schema(example = "1", description = "")
  public Integer getMinimumActivePeriod() {
    return minimumActivePeriod;
  }

  public void setMinimumActivePeriod(Integer minimumActivePeriod) {
    this.minimumActivePeriod = minimumActivePeriod;
  }

  public GetProductsTypeProductIdResponse minimumActivePeriodForDividendsTypeEnum(GetLockPeriodTypeEnum minimumActivePeriodForDividendsTypeEnum) {
    this.minimumActivePeriodForDividendsTypeEnum = minimumActivePeriodForDividendsTypeEnum;
    return this;
  }

   /**
   * Get minimumActivePeriodForDividendsTypeEnum
   * @return minimumActivePeriodForDividendsTypeEnum
  **/
  @Schema(description = "")
  public GetLockPeriodTypeEnum getMinimumActivePeriodForDividendsTypeEnum() {
    return minimumActivePeriodForDividendsTypeEnum;
  }

  public void setMinimumActivePeriodForDividendsTypeEnum(GetLockPeriodTypeEnum minimumActivePeriodForDividendsTypeEnum) {
    this.minimumActivePeriodForDividendsTypeEnum = minimumActivePeriodForDividendsTypeEnum;
  }

  public GetProductsTypeProductIdResponse accountingRule(GetProductsAccountingRule accountingRule) {
    this.accountingRule = accountingRule;
    return this;
  }

   /**
   * Get accountingRule
   * @return accountingRule
  **/
  @Schema(description = "")
  public GetProductsAccountingRule getAccountingRule() {
    return accountingRule;
  }

  public void setAccountingRule(GetProductsAccountingRule accountingRule) {
    this.accountingRule = accountingRule;
  }

  public GetProductsTypeProductIdResponse accountingMappings(GetProductsAccountingMappings accountingMappings) {
    this.accountingMappings = accountingMappings;
    return this;
  }

   /**
   * Get accountingMappings
   * @return accountingMappings
  **/
  @Schema(description = "")
  public GetProductsAccountingMappings getAccountingMappings() {
    return accountingMappings;
  }

  public void setAccountingMappings(GetProductsAccountingMappings accountingMappings) {
    this.accountingMappings = accountingMappings;
  }

  public GetProductsTypeProductIdResponse currencyOptions(List<GetChargesCurrency> currencyOptions) {
    this.currencyOptions = currencyOptions;
    return this;
  }

  public GetProductsTypeProductIdResponse addCurrencyOptionsItem(GetChargesCurrency currencyOptionsItem) {
    if (this.currencyOptions == null) {
      this.currencyOptions = new ArrayList<>();
    }
    this.currencyOptions.add(currencyOptionsItem);
    return this;
  }

   /**
   * Get currencyOptions
   * @return currencyOptions
  **/
  @Schema(description = "")
  public List<GetChargesCurrency> getCurrencyOptions() {
    return currencyOptions;
  }

  public void setCurrencyOptions(List<GetChargesCurrency> currencyOptions) {
    this.currencyOptions = currencyOptions;
  }

  public GetProductsTypeProductIdResponse chargeOptions(List<GetProductsCharges> chargeOptions) {
    this.chargeOptions = chargeOptions;
    return this;
  }

  public GetProductsTypeProductIdResponse addChargeOptionsItem(GetProductsCharges chargeOptionsItem) {
    if (this.chargeOptions == null) {
      this.chargeOptions = new ArrayList<>();
    }
    this.chargeOptions.add(chargeOptionsItem);
    return this;
  }

   /**
   * Get chargeOptions
   * @return chargeOptions
  **/
  @Schema(description = "")
  public List<GetProductsCharges> getChargeOptions() {
    return chargeOptions;
  }

  public void setChargeOptions(List<GetProductsCharges> chargeOptions) {
    this.chargeOptions = chargeOptions;
  }

  public GetProductsTypeProductIdResponse minimumActivePeriodFrequencyTypeOptions(List<GetProductsMinimumActivePeriodFrequencyTypeOptions> minimumActivePeriodFrequencyTypeOptions) {
    this.minimumActivePeriodFrequencyTypeOptions = minimumActivePeriodFrequencyTypeOptions;
    return this;
  }

  public GetProductsTypeProductIdResponse addMinimumActivePeriodFrequencyTypeOptionsItem(GetProductsMinimumActivePeriodFrequencyTypeOptions minimumActivePeriodFrequencyTypeOptionsItem) {
    if (this.minimumActivePeriodFrequencyTypeOptions == null) {
      this.minimumActivePeriodFrequencyTypeOptions = new ArrayList<>();
    }
    this.minimumActivePeriodFrequencyTypeOptions.add(minimumActivePeriodFrequencyTypeOptionsItem);
    return this;
  }

   /**
   * Get minimumActivePeriodFrequencyTypeOptions
   * @return minimumActivePeriodFrequencyTypeOptions
  **/
  @Schema(description = "")
  public List<GetProductsMinimumActivePeriodFrequencyTypeOptions> getMinimumActivePeriodFrequencyTypeOptions() {
    return minimumActivePeriodFrequencyTypeOptions;
  }

  public void setMinimumActivePeriodFrequencyTypeOptions(List<GetProductsMinimumActivePeriodFrequencyTypeOptions> minimumActivePeriodFrequencyTypeOptions) {
    this.minimumActivePeriodFrequencyTypeOptions = minimumActivePeriodFrequencyTypeOptions;
  }

  public GetProductsTypeProductIdResponse lockinPeriodFrequencyTypeOptions(List<GetProductsMinimumActivePeriodFrequencyTypeOptions> lockinPeriodFrequencyTypeOptions) {
    this.lockinPeriodFrequencyTypeOptions = lockinPeriodFrequencyTypeOptions;
    return this;
  }

  public GetProductsTypeProductIdResponse addLockinPeriodFrequencyTypeOptionsItem(GetProductsMinimumActivePeriodFrequencyTypeOptions lockinPeriodFrequencyTypeOptionsItem) {
    if (this.lockinPeriodFrequencyTypeOptions == null) {
      this.lockinPeriodFrequencyTypeOptions = new ArrayList<>();
    }
    this.lockinPeriodFrequencyTypeOptions.add(lockinPeriodFrequencyTypeOptionsItem);
    return this;
  }

   /**
   * Get lockinPeriodFrequencyTypeOptions
   * @return lockinPeriodFrequencyTypeOptions
  **/
  @Schema(description = "")
  public List<GetProductsMinimumActivePeriodFrequencyTypeOptions> getLockinPeriodFrequencyTypeOptions() {
    return lockinPeriodFrequencyTypeOptions;
  }

  public void setLockinPeriodFrequencyTypeOptions(List<GetProductsMinimumActivePeriodFrequencyTypeOptions> lockinPeriodFrequencyTypeOptions) {
    this.lockinPeriodFrequencyTypeOptions = lockinPeriodFrequencyTypeOptions;
  }

  public GetProductsTypeProductIdResponse accountingMappingOptions(GetProductsAccountingMappingOptions accountingMappingOptions) {
    this.accountingMappingOptions = accountingMappingOptions;
    return this;
  }

   /**
   * Get accountingMappingOptions
   * @return accountingMappingOptions
  **/
  @Schema(description = "")
  public GetProductsAccountingMappingOptions getAccountingMappingOptions() {
    return accountingMappingOptions;
  }

  public void setAccountingMappingOptions(GetProductsAccountingMappingOptions accountingMappingOptions) {
    this.accountingMappingOptions = accountingMappingOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetProductsTypeProductIdResponse getProductsTypeProductIdResponse = (GetProductsTypeProductIdResponse) o;
    return Objects.equals(this.id, getProductsTypeProductIdResponse.id) &&
        Objects.equals(this.name, getProductsTypeProductIdResponse.name) &&
        Objects.equals(this.shortName, getProductsTypeProductIdResponse.shortName) &&
        Objects.equals(this.description, getProductsTypeProductIdResponse.description) &&
        Objects.equals(this.currency, getProductsTypeProductIdResponse.currency) &&
        Objects.equals(this.totalShares, getProductsTypeProductIdResponse.totalShares) &&
        Objects.equals(this.totalSharesIssued, getProductsTypeProductIdResponse.totalSharesIssued) &&
        Objects.equals(this.unitPrice, getProductsTypeProductIdResponse.unitPrice) &&
        Objects.equals(this.shareCapital, getProductsTypeProductIdResponse.shareCapital) &&
        Objects.equals(this.minimumShares, getProductsTypeProductIdResponse.minimumShares) &&
        Objects.equals(this.nominalShares, getProductsTypeProductIdResponse.nominalShares) &&
        Objects.equals(this.maximumShares, getProductsTypeProductIdResponse.maximumShares) &&
        Objects.equals(this.marketPrice, getProductsTypeProductIdResponse.marketPrice) &&
        Objects.equals(this.charges, getProductsTypeProductIdResponse.charges) &&
        Objects.equals(this.allowDividendCalculationForInactiveClients, getProductsTypeProductIdResponse.allowDividendCalculationForInactiveClients) &&
        Objects.equals(this.lockinPeriod, getProductsTypeProductIdResponse.lockinPeriod) &&
        Objects.equals(this.lockPeriodTypeEnum, getProductsTypeProductIdResponse.lockPeriodTypeEnum) &&
        Objects.equals(this.minimumActivePeriod, getProductsTypeProductIdResponse.minimumActivePeriod) &&
        Objects.equals(this.minimumActivePeriodForDividendsTypeEnum, getProductsTypeProductIdResponse.minimumActivePeriodForDividendsTypeEnum) &&
        Objects.equals(this.accountingRule, getProductsTypeProductIdResponse.accountingRule) &&
        Objects.equals(this.accountingMappings, getProductsTypeProductIdResponse.accountingMappings) &&
        Objects.equals(this.currencyOptions, getProductsTypeProductIdResponse.currencyOptions) &&
        Objects.equals(this.chargeOptions, getProductsTypeProductIdResponse.chargeOptions) &&
        Objects.equals(this.minimumActivePeriodFrequencyTypeOptions, getProductsTypeProductIdResponse.minimumActivePeriodFrequencyTypeOptions) &&
        Objects.equals(this.lockinPeriodFrequencyTypeOptions, getProductsTypeProductIdResponse.lockinPeriodFrequencyTypeOptions) &&
        Objects.equals(this.accountingMappingOptions, getProductsTypeProductIdResponse.accountingMappingOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, shortName, description, currency, totalShares, totalSharesIssued, unitPrice, shareCapital, minimumShares, nominalShares, maximumShares, marketPrice, charges, allowDividendCalculationForInactiveClients, lockinPeriod, lockPeriodTypeEnum, minimumActivePeriod, minimumActivePeriodForDividendsTypeEnum, accountingRule, accountingMappings, currencyOptions, chargeOptions, minimumActivePeriodFrequencyTypeOptions, lockinPeriodFrequencyTypeOptions, accountingMappingOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetProductsTypeProductIdResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    totalShares: ").append(toIndentedString(totalShares)).append("\n");
    sb.append("    totalSharesIssued: ").append(toIndentedString(totalSharesIssued)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    shareCapital: ").append(toIndentedString(shareCapital)).append("\n");
    sb.append("    minimumShares: ").append(toIndentedString(minimumShares)).append("\n");
    sb.append("    nominalShares: ").append(toIndentedString(nominalShares)).append("\n");
    sb.append("    maximumShares: ").append(toIndentedString(maximumShares)).append("\n");
    sb.append("    marketPrice: ").append(toIndentedString(marketPrice)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    allowDividendCalculationForInactiveClients: ").append(toIndentedString(allowDividendCalculationForInactiveClients)).append("\n");
    sb.append("    lockinPeriod: ").append(toIndentedString(lockinPeriod)).append("\n");
    sb.append("    lockPeriodTypeEnum: ").append(toIndentedString(lockPeriodTypeEnum)).append("\n");
    sb.append("    minimumActivePeriod: ").append(toIndentedString(minimumActivePeriod)).append("\n");
    sb.append("    minimumActivePeriodForDividendsTypeEnum: ").append(toIndentedString(minimumActivePeriodForDividendsTypeEnum)).append("\n");
    sb.append("    accountingRule: ").append(toIndentedString(accountingRule)).append("\n");
    sb.append("    accountingMappings: ").append(toIndentedString(accountingMappings)).append("\n");
    sb.append("    currencyOptions: ").append(toIndentedString(currencyOptions)).append("\n");
    sb.append("    chargeOptions: ").append(toIndentedString(chargeOptions)).append("\n");
    sb.append("    minimumActivePeriodFrequencyTypeOptions: ").append(toIndentedString(minimumActivePeriodFrequencyTypeOptions)).append("\n");
    sb.append("    lockinPeriodFrequencyTypeOptions: ").append(toIndentedString(lockinPeriodFrequencyTypeOptions)).append("\n");
    sb.append("    accountingMappingOptions: ").append(toIndentedString(accountingMappingOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
