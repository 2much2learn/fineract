/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.PutDataTablesRequestAddColumns;
import org.apache.fineract.client.models.PutDataTablesRequestChangeColumns;
import org.apache.fineract.client.models.PutDataTablesRequestDropColumns;
/**
 * PutDataTablesRequest
 */
@Schema(description = "PutDataTablesRequest")

public class PutDataTablesRequest {
  @SerializedName("appTableName")
  private String appTableName = null;

  @SerializedName("dropColumns")
  private List<PutDataTablesRequestDropColumns> dropColumns = null;

  @SerializedName("addColumns")
  private List<PutDataTablesRequestAddColumns> addColumns = null;

  @SerializedName("ChangeColumns")
  private List<PutDataTablesRequestChangeColumns> changeColumns = null;

  public PutDataTablesRequest appTableName(String appTableName) {
    this.appTableName = appTableName;
    return this;
  }

   /**
   * Get appTableName
   * @return appTableName
  **/
  @Schema(example = "m_client", description = "")
  public String getAppTableName() {
    return appTableName;
  }

  public void setAppTableName(String appTableName) {
    this.appTableName = appTableName;
  }

  public PutDataTablesRequest dropColumns(List<PutDataTablesRequestDropColumns> dropColumns) {
    this.dropColumns = dropColumns;
    return this;
  }

  public PutDataTablesRequest addDropColumnsItem(PutDataTablesRequestDropColumns dropColumnsItem) {
    if (this.dropColumns == null) {
      this.dropColumns = new ArrayList<>();
    }
    this.dropColumns.add(dropColumnsItem);
    return this;
  }

   /**
   * Get dropColumns
   * @return dropColumns
  **/
  @Schema(description = "")
  public List<PutDataTablesRequestDropColumns> getDropColumns() {
    return dropColumns;
  }

  public void setDropColumns(List<PutDataTablesRequestDropColumns> dropColumns) {
    this.dropColumns = dropColumns;
  }

  public PutDataTablesRequest addColumns(List<PutDataTablesRequestAddColumns> addColumns) {
    this.addColumns = addColumns;
    return this;
  }

  public PutDataTablesRequest addAddColumnsItem(PutDataTablesRequestAddColumns addColumnsItem) {
    if (this.addColumns == null) {
      this.addColumns = new ArrayList<>();
    }
    this.addColumns.add(addColumnsItem);
    return this;
  }

   /**
   * Get addColumns
   * @return addColumns
  **/
  @Schema(description = "")
  public List<PutDataTablesRequestAddColumns> getAddColumns() {
    return addColumns;
  }

  public void setAddColumns(List<PutDataTablesRequestAddColumns> addColumns) {
    this.addColumns = addColumns;
  }

  public PutDataTablesRequest changeColumns(List<PutDataTablesRequestChangeColumns> changeColumns) {
    this.changeColumns = changeColumns;
    return this;
  }

  public PutDataTablesRequest addChangeColumnsItem(PutDataTablesRequestChangeColumns changeColumnsItem) {
    if (this.changeColumns == null) {
      this.changeColumns = new ArrayList<>();
    }
    this.changeColumns.add(changeColumnsItem);
    return this;
  }

   /**
   * Get changeColumns
   * @return changeColumns
  **/
  @Schema(description = "")
  public List<PutDataTablesRequestChangeColumns> getChangeColumns() {
    return changeColumns;
  }

  public void setChangeColumns(List<PutDataTablesRequestChangeColumns> changeColumns) {
    this.changeColumns = changeColumns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutDataTablesRequest putDataTablesRequest = (PutDataTablesRequest) o;
    return Objects.equals(this.appTableName, putDataTablesRequest.appTableName) &&
        Objects.equals(this.dropColumns, putDataTablesRequest.dropColumns) &&
        Objects.equals(this.addColumns, putDataTablesRequest.addColumns) &&
        Objects.equals(this.changeColumns, putDataTablesRequest.changeColumns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appTableName, dropColumns, addColumns, changeColumns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutDataTablesRequest {\n");
    
    sb.append("    appTableName: ").append(toIndentedString(appTableName)).append("\n");
    sb.append("    dropColumns: ").append(toIndentedString(dropColumns)).append("\n");
    sb.append("    addColumns: ").append(toIndentedString(addColumns)).append("\n");
    sb.append("    changeColumns: ").append(toIndentedString(changeColumns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
