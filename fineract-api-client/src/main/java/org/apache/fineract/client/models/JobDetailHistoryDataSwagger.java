/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
/**
 * JobDetailHistoryDataSwagger
 */


public class JobDetailHistoryDataSwagger {
  @SerializedName("version")
  private Long version = null;

  @SerializedName("jobRunStartTime")
  private OffsetDateTime jobRunStartTime = null;

  @SerializedName("jobRunEndTime")
  private OffsetDateTime jobRunEndTime = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("triggerType")
  private String triggerType = null;

  public JobDetailHistoryDataSwagger version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(example = "1", description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }

  public JobDetailHistoryDataSwagger jobRunStartTime(OffsetDateTime jobRunStartTime) {
    this.jobRunStartTime = jobRunStartTime;
    return this;
  }

   /**
   * Get jobRunStartTime
   * @return jobRunStartTime
  **/
  @Schema(description = "")
  public OffsetDateTime getJobRunStartTime() {
    return jobRunStartTime;
  }

  public void setJobRunStartTime(OffsetDateTime jobRunStartTime) {
    this.jobRunStartTime = jobRunStartTime;
  }

  public JobDetailHistoryDataSwagger jobRunEndTime(OffsetDateTime jobRunEndTime) {
    this.jobRunEndTime = jobRunEndTime;
    return this;
  }

   /**
   * Get jobRunEndTime
   * @return jobRunEndTime
  **/
  @Schema(description = "")
  public OffsetDateTime getJobRunEndTime() {
    return jobRunEndTime;
  }

  public void setJobRunEndTime(OffsetDateTime jobRunEndTime) {
    this.jobRunEndTime = jobRunEndTime;
  }

  public JobDetailHistoryDataSwagger status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(example = "success", description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public JobDetailHistoryDataSwagger triggerType(String triggerType) {
    this.triggerType = triggerType;
    return this;
  }

   /**
   * Get triggerType
   * @return triggerType
  **/
  @Schema(example = "cron", description = "")
  public String getTriggerType() {
    return triggerType;
  }

  public void setTriggerType(String triggerType) {
    this.triggerType = triggerType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDetailHistoryDataSwagger jobDetailHistoryDataSwagger = (JobDetailHistoryDataSwagger) o;
    return Objects.equals(this.version, jobDetailHistoryDataSwagger.version) &&
        Objects.equals(this.jobRunStartTime, jobDetailHistoryDataSwagger.jobRunStartTime) &&
        Objects.equals(this.jobRunEndTime, jobDetailHistoryDataSwagger.jobRunEndTime) &&
        Objects.equals(this.status, jobDetailHistoryDataSwagger.status) &&
        Objects.equals(this.triggerType, jobDetailHistoryDataSwagger.triggerType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, jobRunStartTime, jobRunEndTime, status, triggerType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDetailHistoryDataSwagger {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    jobRunStartTime: ").append(toIndentedString(jobRunStartTime)).append("\n");
    sb.append("    jobRunEndTime: ").append(toIndentedString(jobRunEndTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    triggerType: ").append(toIndentedString(triggerType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
