/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.SingleDebitOrCreditEntryCommand;
/**
 * JournalEntryCommand
 */


public class JournalEntryCommand {
  @SerializedName("officeId")
  private Long officeId = null;

  @SerializedName("transactionDate")
  private LocalDate transactionDate = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("referenceNumber")
  private String referenceNumber = null;

  @SerializedName("accountingRuleId")
  private Long accountingRuleId = null;

  @SerializedName("credits")
  private List<SingleDebitOrCreditEntryCommand> credits = null;

  @SerializedName("debits")
  private List<SingleDebitOrCreditEntryCommand> debits = null;

  public JournalEntryCommand officeId(Long officeId) {
    this.officeId = officeId;
    return this;
  }

   /**
   * Get officeId
   * @return officeId
  **/
  @Schema(description = "")
  public Long getOfficeId() {
    return officeId;
  }

  public void setOfficeId(Long officeId) {
    this.officeId = officeId;
  }

  public JournalEntryCommand transactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @Schema(description = "")
  public LocalDate getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
  }

  public JournalEntryCommand comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public JournalEntryCommand referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @Schema(description = "")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public JournalEntryCommand accountingRuleId(Long accountingRuleId) {
    this.accountingRuleId = accountingRuleId;
    return this;
  }

   /**
   * Get accountingRuleId
   * @return accountingRuleId
  **/
  @Schema(description = "")
  public Long getAccountingRuleId() {
    return accountingRuleId;
  }

  public void setAccountingRuleId(Long accountingRuleId) {
    this.accountingRuleId = accountingRuleId;
  }

  public JournalEntryCommand credits(List<SingleDebitOrCreditEntryCommand> credits) {
    this.credits = credits;
    return this;
  }

  public JournalEntryCommand addCreditsItem(SingleDebitOrCreditEntryCommand creditsItem) {
    if (this.credits == null) {
      this.credits = new ArrayList<>();
    }
    this.credits.add(creditsItem);
    return this;
  }

   /**
   * Get credits
   * @return credits
  **/
  @Schema(description = "")
  public List<SingleDebitOrCreditEntryCommand> getCredits() {
    return credits;
  }

  public void setCredits(List<SingleDebitOrCreditEntryCommand> credits) {
    this.credits = credits;
  }

  public JournalEntryCommand debits(List<SingleDebitOrCreditEntryCommand> debits) {
    this.debits = debits;
    return this;
  }

  public JournalEntryCommand addDebitsItem(SingleDebitOrCreditEntryCommand debitsItem) {
    if (this.debits == null) {
      this.debits = new ArrayList<>();
    }
    this.debits.add(debitsItem);
    return this;
  }

   /**
   * Get debits
   * @return debits
  **/
  @Schema(description = "")
  public List<SingleDebitOrCreditEntryCommand> getDebits() {
    return debits;
  }

  public void setDebits(List<SingleDebitOrCreditEntryCommand> debits) {
    this.debits = debits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalEntryCommand journalEntryCommand = (JournalEntryCommand) o;
    return Objects.equals(this.officeId, journalEntryCommand.officeId) &&
        Objects.equals(this.transactionDate, journalEntryCommand.transactionDate) &&
        Objects.equals(this.comments, journalEntryCommand.comments) &&
        Objects.equals(this.referenceNumber, journalEntryCommand.referenceNumber) &&
        Objects.equals(this.accountingRuleId, journalEntryCommand.accountingRuleId) &&
        Objects.equals(this.credits, journalEntryCommand.credits) &&
        Objects.equals(this.debits, journalEntryCommand.debits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(officeId, transactionDate, comments, referenceNumber, accountingRuleId, credits, debits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalEntryCommand {\n");
    
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    accountingRuleId: ").append(toIndentedString(accountingRuleId)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    debits: ").append(toIndentedString(debits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
