/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.GetAccountOptions;
import org.apache.fineract.client.models.GetFromAccountOptions;
/**
 * GetAccountTransferTemplateResponse
 */
@Schema(description = "GetAccountTransferTemplateResponse")

public class GetAccountTransferTemplateResponse {
  @SerializedName("accountTypeOptions")
  private List<GetAccountOptions> accountTypeOptions = null;

  @SerializedName("fromAccountTypeOptions")
  private List<GetFromAccountOptions> fromAccountTypeOptions = null;

  @SerializedName("toAccountTypeOptions")
  private List<GetFromAccountOptions> toAccountTypeOptions = null;

  public GetAccountTransferTemplateResponse accountTypeOptions(List<GetAccountOptions> accountTypeOptions) {
    this.accountTypeOptions = accountTypeOptions;
    return this;
  }

  public GetAccountTransferTemplateResponse addAccountTypeOptionsItem(GetAccountOptions accountTypeOptionsItem) {
    if (this.accountTypeOptions == null) {
      this.accountTypeOptions = new ArrayList<>();
    }
    this.accountTypeOptions.add(accountTypeOptionsItem);
    return this;
  }

   /**
   * Get accountTypeOptions
   * @return accountTypeOptions
  **/
  @Schema(description = "")
  public List<GetAccountOptions> getAccountTypeOptions() {
    return accountTypeOptions;
  }

  public void setAccountTypeOptions(List<GetAccountOptions> accountTypeOptions) {
    this.accountTypeOptions = accountTypeOptions;
  }

  public GetAccountTransferTemplateResponse fromAccountTypeOptions(List<GetFromAccountOptions> fromAccountTypeOptions) {
    this.fromAccountTypeOptions = fromAccountTypeOptions;
    return this;
  }

  public GetAccountTransferTemplateResponse addFromAccountTypeOptionsItem(GetFromAccountOptions fromAccountTypeOptionsItem) {
    if (this.fromAccountTypeOptions == null) {
      this.fromAccountTypeOptions = new ArrayList<>();
    }
    this.fromAccountTypeOptions.add(fromAccountTypeOptionsItem);
    return this;
  }

   /**
   * Get fromAccountTypeOptions
   * @return fromAccountTypeOptions
  **/
  @Schema(description = "")
  public List<GetFromAccountOptions> getFromAccountTypeOptions() {
    return fromAccountTypeOptions;
  }

  public void setFromAccountTypeOptions(List<GetFromAccountOptions> fromAccountTypeOptions) {
    this.fromAccountTypeOptions = fromAccountTypeOptions;
  }

  public GetAccountTransferTemplateResponse toAccountTypeOptions(List<GetFromAccountOptions> toAccountTypeOptions) {
    this.toAccountTypeOptions = toAccountTypeOptions;
    return this;
  }

  public GetAccountTransferTemplateResponse addToAccountTypeOptionsItem(GetFromAccountOptions toAccountTypeOptionsItem) {
    if (this.toAccountTypeOptions == null) {
      this.toAccountTypeOptions = new ArrayList<>();
    }
    this.toAccountTypeOptions.add(toAccountTypeOptionsItem);
    return this;
  }

   /**
   * Get toAccountTypeOptions
   * @return toAccountTypeOptions
  **/
  @Schema(description = "")
  public List<GetFromAccountOptions> getToAccountTypeOptions() {
    return toAccountTypeOptions;
  }

  public void setToAccountTypeOptions(List<GetFromAccountOptions> toAccountTypeOptions) {
    this.toAccountTypeOptions = toAccountTypeOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountTransferTemplateResponse getAccountTransferTemplateResponse = (GetAccountTransferTemplateResponse) o;
    return Objects.equals(this.accountTypeOptions, getAccountTransferTemplateResponse.accountTypeOptions) &&
        Objects.equals(this.fromAccountTypeOptions, getAccountTransferTemplateResponse.fromAccountTypeOptions) &&
        Objects.equals(this.toAccountTypeOptions, getAccountTransferTemplateResponse.toAccountTypeOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountTypeOptions, fromAccountTypeOptions, toAccountTypeOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountTransferTemplateResponse {\n");
    
    sb.append("    accountTypeOptions: ").append(toIndentedString(accountTypeOptions)).append("\n");
    sb.append("    fromAccountTypeOptions: ").append(toIndentedString(fromAccountTypeOptions)).append("\n");
    sb.append("    toAccountTypeOptions: ").append(toIndentedString(toAccountTypeOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
