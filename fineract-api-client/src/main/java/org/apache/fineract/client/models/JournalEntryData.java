/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.apache.fineract.client.models.EnumOptionData;
/**
 * JournalEntryData
 */


public class JournalEntryData {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("officeId")
  private Long officeId = null;

  @SerializedName("glAccountId")
  private Long glAccountId = null;

  @SerializedName("glAccountType")
  private EnumOptionData glAccountType = null;

  @SerializedName("transactionDate")
  private LocalDate transactionDate = null;

  @SerializedName("entryType")
  private EnumOptionData entryType = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("transactionId")
  private String transactionId = null;

  @SerializedName("rowIndex")
  private Integer rowIndex = null;

  public JournalEntryData id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public JournalEntryData officeId(Long officeId) {
    this.officeId = officeId;
    return this;
  }

   /**
   * Get officeId
   * @return officeId
  **/
  @Schema(description = "")
  public Long getOfficeId() {
    return officeId;
  }

  public void setOfficeId(Long officeId) {
    this.officeId = officeId;
  }

  public JournalEntryData glAccountId(Long glAccountId) {
    this.glAccountId = glAccountId;
    return this;
  }

   /**
   * Get glAccountId
   * @return glAccountId
  **/
  @Schema(description = "")
  public Long getGlAccountId() {
    return glAccountId;
  }

  public void setGlAccountId(Long glAccountId) {
    this.glAccountId = glAccountId;
  }

  public JournalEntryData glAccountType(EnumOptionData glAccountType) {
    this.glAccountType = glAccountType;
    return this;
  }

   /**
   * Get glAccountType
   * @return glAccountType
  **/
  @Schema(description = "")
  public EnumOptionData getGlAccountType() {
    return glAccountType;
  }

  public void setGlAccountType(EnumOptionData glAccountType) {
    this.glAccountType = glAccountType;
  }

  public JournalEntryData transactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @Schema(description = "")
  public LocalDate getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
  }

  public JournalEntryData entryType(EnumOptionData entryType) {
    this.entryType = entryType;
    return this;
  }

   /**
   * Get entryType
   * @return entryType
  **/
  @Schema(description = "")
  public EnumOptionData getEntryType() {
    return entryType;
  }

  public void setEntryType(EnumOptionData entryType) {
    this.entryType = entryType;
  }

  public JournalEntryData amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public JournalEntryData transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @Schema(description = "")
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public JournalEntryData rowIndex(Integer rowIndex) {
    this.rowIndex = rowIndex;
    return this;
  }

   /**
   * Get rowIndex
   * @return rowIndex
  **/
  @Schema(description = "")
  public Integer getRowIndex() {
    return rowIndex;
  }

  public void setRowIndex(Integer rowIndex) {
    this.rowIndex = rowIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalEntryData journalEntryData = (JournalEntryData) o;
    return Objects.equals(this.id, journalEntryData.id) &&
        Objects.equals(this.officeId, journalEntryData.officeId) &&
        Objects.equals(this.glAccountId, journalEntryData.glAccountId) &&
        Objects.equals(this.glAccountType, journalEntryData.glAccountType) &&
        Objects.equals(this.transactionDate, journalEntryData.transactionDate) &&
        Objects.equals(this.entryType, journalEntryData.entryType) &&
        Objects.equals(this.amount, journalEntryData.amount) &&
        Objects.equals(this.transactionId, journalEntryData.transactionId) &&
        Objects.equals(this.rowIndex, journalEntryData.rowIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, officeId, glAccountId, glAccountType, transactionDate, entryType, amount, transactionId, rowIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalEntryData {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    glAccountId: ").append(toIndentedString(glAccountId)).append("\n");
    sb.append("    glAccountType: ").append(toIndentedString(glAccountType)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    rowIndex: ").append(toIndentedString(rowIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
