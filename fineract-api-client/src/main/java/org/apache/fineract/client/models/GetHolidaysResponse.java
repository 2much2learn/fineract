/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.LocalDate;
import org.apache.fineract.client.models.EnumOptionData;
/**
 * GetHolidaysResponse
 */
@Schema(description = "GetHolidaysResponse")

public class GetHolidaysResponse {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("fromDate")
  private LocalDate fromDate = null;

  @SerializedName("toDate")
  private LocalDate toDate = null;

  @SerializedName("repaymentsRescheduledTo")
  private LocalDate repaymentsRescheduledTo = null;

  @SerializedName("officeId")
  private Long officeId = null;

  @SerializedName("status")
  private EnumOptionData status = null;

  public GetHolidaysResponse id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1", description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public GetHolidaysResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Good Friday", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetHolidaysResponse fromDate(LocalDate fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @Schema(description = "")
  public LocalDate getFromDate() {
    return fromDate;
  }

  public void setFromDate(LocalDate fromDate) {
    this.fromDate = fromDate;
  }

  public GetHolidaysResponse toDate(LocalDate toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * Get toDate
   * @return toDate
  **/
  @Schema(description = "")
  public LocalDate getToDate() {
    return toDate;
  }

  public void setToDate(LocalDate toDate) {
    this.toDate = toDate;
  }

  public GetHolidaysResponse repaymentsRescheduledTo(LocalDate repaymentsRescheduledTo) {
    this.repaymentsRescheduledTo = repaymentsRescheduledTo;
    return this;
  }

   /**
   * Get repaymentsRescheduledTo
   * @return repaymentsRescheduledTo
  **/
  @Schema(description = "")
  public LocalDate getRepaymentsRescheduledTo() {
    return repaymentsRescheduledTo;
  }

  public void setRepaymentsRescheduledTo(LocalDate repaymentsRescheduledTo) {
    this.repaymentsRescheduledTo = repaymentsRescheduledTo;
  }

  public GetHolidaysResponse officeId(Long officeId) {
    this.officeId = officeId;
    return this;
  }

   /**
   * Get officeId
   * @return officeId
  **/
  @Schema(example = "1", description = "")
  public Long getOfficeId() {
    return officeId;
  }

  public void setOfficeId(Long officeId) {
    this.officeId = officeId;
  }

  public GetHolidaysResponse status(EnumOptionData status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public EnumOptionData getStatus() {
    return status;
  }

  public void setStatus(EnumOptionData status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetHolidaysResponse getHolidaysResponse = (GetHolidaysResponse) o;
    return Objects.equals(this.id, getHolidaysResponse.id) &&
        Objects.equals(this.name, getHolidaysResponse.name) &&
        Objects.equals(this.fromDate, getHolidaysResponse.fromDate) &&
        Objects.equals(this.toDate, getHolidaysResponse.toDate) &&
        Objects.equals(this.repaymentsRescheduledTo, getHolidaysResponse.repaymentsRescheduledTo) &&
        Objects.equals(this.officeId, getHolidaysResponse.officeId) &&
        Objects.equals(this.status, getHolidaysResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, fromDate, toDate, repaymentsRescheduledTo, officeId, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetHolidaysResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    repaymentsRescheduledTo: ").append(toIndentedString(repaymentsRescheduledTo)).append("\n");
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
