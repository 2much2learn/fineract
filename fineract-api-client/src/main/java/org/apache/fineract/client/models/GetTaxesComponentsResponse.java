/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.GetTaxesComponentsCreditAccount;
import org.apache.fineract.client.models.GetTaxesComponentsCreditAccountType;
import org.apache.fineract.client.models.GetTaxesComponentsHistories;
/**
 * GetTaxesComponentsResponse
 */
@Schema(description = "GetTaxesComponentsResponse")

public class GetTaxesComponentsResponse {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("percentage")
  private Float percentage = null;

  @SerializedName("creditAccountType")
  private GetTaxesComponentsCreditAccountType creditAccountType = null;

  @SerializedName("creditAccount")
  private GetTaxesComponentsCreditAccount creditAccount = null;

  @SerializedName("startDate")
  private LocalDate startDate = null;

  @SerializedName("taxComponentsHistories")
  private List<GetTaxesComponentsHistories> taxComponentsHistories = null;

  public GetTaxesComponentsResponse id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1", description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GetTaxesComponentsResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "tax component 1", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetTaxesComponentsResponse percentage(Float percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * Get percentage
   * @return percentage
  **/
  @Schema(example = "10.0", description = "")
  public Float getPercentage() {
    return percentage;
  }

  public void setPercentage(Float percentage) {
    this.percentage = percentage;
  }

  public GetTaxesComponentsResponse creditAccountType(GetTaxesComponentsCreditAccountType creditAccountType) {
    this.creditAccountType = creditAccountType;
    return this;
  }

   /**
   * Get creditAccountType
   * @return creditAccountType
  **/
  @Schema(description = "")
  public GetTaxesComponentsCreditAccountType getCreditAccountType() {
    return creditAccountType;
  }

  public void setCreditAccountType(GetTaxesComponentsCreditAccountType creditAccountType) {
    this.creditAccountType = creditAccountType;
  }

  public GetTaxesComponentsResponse creditAccount(GetTaxesComponentsCreditAccount creditAccount) {
    this.creditAccount = creditAccount;
    return this;
  }

   /**
   * Get creditAccount
   * @return creditAccount
  **/
  @Schema(description = "")
  public GetTaxesComponentsCreditAccount getCreditAccount() {
    return creditAccount;
  }

  public void setCreditAccount(GetTaxesComponentsCreditAccount creditAccount) {
    this.creditAccount = creditAccount;
  }

  public GetTaxesComponentsResponse startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public GetTaxesComponentsResponse taxComponentsHistories(List<GetTaxesComponentsHistories> taxComponentsHistories) {
    this.taxComponentsHistories = taxComponentsHistories;
    return this;
  }

  public GetTaxesComponentsResponse addTaxComponentsHistoriesItem(GetTaxesComponentsHistories taxComponentsHistoriesItem) {
    if (this.taxComponentsHistories == null) {
      this.taxComponentsHistories = new ArrayList<>();
    }
    this.taxComponentsHistories.add(taxComponentsHistoriesItem);
    return this;
  }

   /**
   * Get taxComponentsHistories
   * @return taxComponentsHistories
  **/
  @Schema(description = "")
  public List<GetTaxesComponentsHistories> getTaxComponentsHistories() {
    return taxComponentsHistories;
  }

  public void setTaxComponentsHistories(List<GetTaxesComponentsHistories> taxComponentsHistories) {
    this.taxComponentsHistories = taxComponentsHistories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTaxesComponentsResponse getTaxesComponentsResponse = (GetTaxesComponentsResponse) o;
    return Objects.equals(this.id, getTaxesComponentsResponse.id) &&
        Objects.equals(this.name, getTaxesComponentsResponse.name) &&
        Objects.equals(this.percentage, getTaxesComponentsResponse.percentage) &&
        Objects.equals(this.creditAccountType, getTaxesComponentsResponse.creditAccountType) &&
        Objects.equals(this.creditAccount, getTaxesComponentsResponse.creditAccount) &&
        Objects.equals(this.startDate, getTaxesComponentsResponse.startDate) &&
        Objects.equals(this.taxComponentsHistories, getTaxesComponentsResponse.taxComponentsHistories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, percentage, creditAccountType, creditAccount, startDate, taxComponentsHistories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTaxesComponentsResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    creditAccountType: ").append(toIndentedString(creditAccountType)).append("\n");
    sb.append("    creditAccount: ").append(toIndentedString(creditAccount)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    taxComponentsHistories: ").append(toIndentedString(taxComponentsHistories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
