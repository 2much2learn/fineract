/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.3.0-806-gcdf3c76-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.DatatableCheckStatusData;
import org.apache.fineract.client.models.DatatableChecksData;
import org.apache.fineract.client.models.LoanProductData;
import org.apache.fineract.client.models.SavingsProductData;
/**
 * GetEntityDatatableChecksTemplateResponse
 */
@Schema(description = "GetEntityDatatableChecksTemplateResponse")

public class GetEntityDatatableChecksTemplateResponse {
  @SerializedName("entities")
  private List<String> entities = null;

  @SerializedName("statusClient")
  private List<DatatableCheckStatusData> statusClient = null;

  @SerializedName("statusGroup")
  private List<DatatableCheckStatusData> statusGroup = null;

  @SerializedName("statusSavings")
  private List<DatatableCheckStatusData> statusSavings = null;

  @SerializedName("statusLoans")
  private List<DatatableCheckStatusData> statusLoans = null;

  @SerializedName("datatables")
  private List<DatatableChecksData> datatables = null;

  @SerializedName("loanProductDatas")
  private List<LoanProductData> loanProductDatas = null;

  @SerializedName("savingsProductDatas")
  private List<SavingsProductData> savingsProductDatas = null;

  public GetEntityDatatableChecksTemplateResponse entities(List<String> entities) {
    this.entities = entities;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addEntitiesItem(String entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Get entities
   * @return entities
  **/
  @Schema(description = "")
  public List<String> getEntities() {
    return entities;
  }

  public void setEntities(List<String> entities) {
    this.entities = entities;
  }

  public GetEntityDatatableChecksTemplateResponse statusClient(List<DatatableCheckStatusData> statusClient) {
    this.statusClient = statusClient;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addStatusClientItem(DatatableCheckStatusData statusClientItem) {
    if (this.statusClient == null) {
      this.statusClient = new ArrayList<>();
    }
    this.statusClient.add(statusClientItem);
    return this;
  }

   /**
   * Get statusClient
   * @return statusClient
  **/
  @Schema(description = "")
  public List<DatatableCheckStatusData> getStatusClient() {
    return statusClient;
  }

  public void setStatusClient(List<DatatableCheckStatusData> statusClient) {
    this.statusClient = statusClient;
  }

  public GetEntityDatatableChecksTemplateResponse statusGroup(List<DatatableCheckStatusData> statusGroup) {
    this.statusGroup = statusGroup;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addStatusGroupItem(DatatableCheckStatusData statusGroupItem) {
    if (this.statusGroup == null) {
      this.statusGroup = new ArrayList<>();
    }
    this.statusGroup.add(statusGroupItem);
    return this;
  }

   /**
   * Get statusGroup
   * @return statusGroup
  **/
  @Schema(description = "")
  public List<DatatableCheckStatusData> getStatusGroup() {
    return statusGroup;
  }

  public void setStatusGroup(List<DatatableCheckStatusData> statusGroup) {
    this.statusGroup = statusGroup;
  }

  public GetEntityDatatableChecksTemplateResponse statusSavings(List<DatatableCheckStatusData> statusSavings) {
    this.statusSavings = statusSavings;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addStatusSavingsItem(DatatableCheckStatusData statusSavingsItem) {
    if (this.statusSavings == null) {
      this.statusSavings = new ArrayList<>();
    }
    this.statusSavings.add(statusSavingsItem);
    return this;
  }

   /**
   * Get statusSavings
   * @return statusSavings
  **/
  @Schema(description = "")
  public List<DatatableCheckStatusData> getStatusSavings() {
    return statusSavings;
  }

  public void setStatusSavings(List<DatatableCheckStatusData> statusSavings) {
    this.statusSavings = statusSavings;
  }

  public GetEntityDatatableChecksTemplateResponse statusLoans(List<DatatableCheckStatusData> statusLoans) {
    this.statusLoans = statusLoans;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addStatusLoansItem(DatatableCheckStatusData statusLoansItem) {
    if (this.statusLoans == null) {
      this.statusLoans = new ArrayList<>();
    }
    this.statusLoans.add(statusLoansItem);
    return this;
  }

   /**
   * Get statusLoans
   * @return statusLoans
  **/
  @Schema(description = "")
  public List<DatatableCheckStatusData> getStatusLoans() {
    return statusLoans;
  }

  public void setStatusLoans(List<DatatableCheckStatusData> statusLoans) {
    this.statusLoans = statusLoans;
  }

  public GetEntityDatatableChecksTemplateResponse datatables(List<DatatableChecksData> datatables) {
    this.datatables = datatables;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addDatatablesItem(DatatableChecksData datatablesItem) {
    if (this.datatables == null) {
      this.datatables = new ArrayList<>();
    }
    this.datatables.add(datatablesItem);
    return this;
  }

   /**
   * Get datatables
   * @return datatables
  **/
  @Schema(description = "")
  public List<DatatableChecksData> getDatatables() {
    return datatables;
  }

  public void setDatatables(List<DatatableChecksData> datatables) {
    this.datatables = datatables;
  }

  public GetEntityDatatableChecksTemplateResponse loanProductDatas(List<LoanProductData> loanProductDatas) {
    this.loanProductDatas = loanProductDatas;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addLoanProductDatasItem(LoanProductData loanProductDatasItem) {
    if (this.loanProductDatas == null) {
      this.loanProductDatas = new ArrayList<>();
    }
    this.loanProductDatas.add(loanProductDatasItem);
    return this;
  }

   /**
   * Get loanProductDatas
   * @return loanProductDatas
  **/
  @Schema(description = "")
  public List<LoanProductData> getLoanProductDatas() {
    return loanProductDatas;
  }

  public void setLoanProductDatas(List<LoanProductData> loanProductDatas) {
    this.loanProductDatas = loanProductDatas;
  }

  public GetEntityDatatableChecksTemplateResponse savingsProductDatas(List<SavingsProductData> savingsProductDatas) {
    this.savingsProductDatas = savingsProductDatas;
    return this;
  }

  public GetEntityDatatableChecksTemplateResponse addSavingsProductDatasItem(SavingsProductData savingsProductDatasItem) {
    if (this.savingsProductDatas == null) {
      this.savingsProductDatas = new ArrayList<>();
    }
    this.savingsProductDatas.add(savingsProductDatasItem);
    return this;
  }

   /**
   * Get savingsProductDatas
   * @return savingsProductDatas
  **/
  @Schema(description = "")
  public List<SavingsProductData> getSavingsProductDatas() {
    return savingsProductDatas;
  }

  public void setSavingsProductDatas(List<SavingsProductData> savingsProductDatas) {
    this.savingsProductDatas = savingsProductDatas;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEntityDatatableChecksTemplateResponse getEntityDatatableChecksTemplateResponse = (GetEntityDatatableChecksTemplateResponse) o;
    return Objects.equals(this.entities, getEntityDatatableChecksTemplateResponse.entities) &&
        Objects.equals(this.statusClient, getEntityDatatableChecksTemplateResponse.statusClient) &&
        Objects.equals(this.statusGroup, getEntityDatatableChecksTemplateResponse.statusGroup) &&
        Objects.equals(this.statusSavings, getEntityDatatableChecksTemplateResponse.statusSavings) &&
        Objects.equals(this.statusLoans, getEntityDatatableChecksTemplateResponse.statusLoans) &&
        Objects.equals(this.datatables, getEntityDatatableChecksTemplateResponse.datatables) &&
        Objects.equals(this.loanProductDatas, getEntityDatatableChecksTemplateResponse.loanProductDatas) &&
        Objects.equals(this.savingsProductDatas, getEntityDatatableChecksTemplateResponse.savingsProductDatas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entities, statusClient, statusGroup, statusSavings, statusLoans, datatables, loanProductDatas, savingsProductDatas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEntityDatatableChecksTemplateResponse {\n");
    
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    statusClient: ").append(toIndentedString(statusClient)).append("\n");
    sb.append("    statusGroup: ").append(toIndentedString(statusGroup)).append("\n");
    sb.append("    statusSavings: ").append(toIndentedString(statusSavings)).append("\n");
    sb.append("    statusLoans: ").append(toIndentedString(statusLoans)).append("\n");
    sb.append("    datatables: ").append(toIndentedString(datatables)).append("\n");
    sb.append("    loanProductDatas: ").append(toIndentedString(loanProductDatas)).append("\n");
    sb.append("    savingsProductDatas: ").append(toIndentedString(savingsProductDatas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
